{"version":3,"file":"vue.js","sources":["../src/compile/parseAst.js","../src/compile/generate.js","../src/compile/index.js","../src/utils/index.js","../src/global-api/index.js","../src/observe/arr.js","../src/observe/dep.js","../src/observe/index.js","../src/utils/nextTick.js","../src/observe/watcher.js","../src/initState.js","../src/vnode/patch.js","../src/lifecycle.js","../src/init.js","../src/vnode/index.js","../src/index.js"],"sourcesContent":["\r\n\r\n// ast语法树 {} 操作节点 css js\r\n//  vnode {}操作节点\r\n// <div id=\"app\">hello {{msg}} </div>\r\n/* \r\n{\r\n    tag:\"div\",\r\n    attrs:[{id:\"app\"}],\r\n    children:[{\r\n        tag:null,\r\n        text:'hello{{msg}}'\r\n    }]\r\n}\r\n*/\r\n// 声明正则 匹配标签开头结尾 属性 \r\nconst ncname = `[a-zA-Z_][\\\\-\\\\.0-9_a-zA-Z]*` //标签名 a h span \r\nconst qnameCapture = `((?:${ncname}\\\\:)?${ncname})` //<span:xx> 特殊标签\r\nconst startTagOpen = new RegExp(`^<${qnameCapture}`)//标签开头的正则，捕获的内容是标签名\r\nconst endTag = new RegExp(`^<\\\\/${qnameCapture}[^>]*>`)//匹配标签结尾的</div>\r\n// attr='xxx'\r\nconst attribute = /^\\s*([^\\s\"'<>\\/=]+)(?:\\s*(=)\\s*(?:\"([^\"]*)\"+|'([^']*)'+|([^\\s\"'=<>`]+)))?/ \r\nconst startTagClose = /^\\s*(\\/?)>/  //匹配标签结束时的>\r\n\r\n\r\n\r\n// 解析html\r\n// 遍历\r\nexport function parseHTML(html){\r\n    \r\n    // 创建ast对象\r\n    function createAstElement(tag,attrs){\r\n        return {\r\n            tag,//元素\r\n            attrs,//属性\r\n            children:[],//子集\r\n            type:1,//dom 1\r\n            parent:null\r\n        }\r\n    }\r\n\r\n    // 开始的标签 添加至root 语法树解构的对象中\r\n    function start(tag,attrs){\r\n        // console.log(tag,attrs,'开始标签');\r\n        let element = createAstElement(tag,attrs)\r\n        if(!root){\r\n            root = element\r\n        }\r\n        createdParent = element\r\n        stack.push(element)\r\n    }\r\n    // 文本\r\n    function charts(text){\r\n        // console.log(text,'文本');\r\n        text = text.replace(/\\s*/g,'')//去空格\r\n        if(text){\r\n            createdParent.children.push({\r\n                type:3,\r\n                text\r\n            })\r\n        }\r\n    }\r\n    function end(tag){\r\n        // console.log(tag,'结束标签');\r\n        let element = stack.pop()\r\n        createdParent = stack[stack.length-1]\r\n        if(createdParent){ //元素的闭合\r\n            element.parent = createdParent.tag\r\n            createdParent.children.push(element)\r\n        }\r\n    }\r\n\r\n    let root;//根元素\r\n    let createdParent;//当前元素父节点\r\n    let stack=[]; //栈的数据解构 [div,h]\r\n\r\n\r\n    // 开始标签 文本 结束标签\r\n    // 一层层的剥离html的内容\r\n    while(html){\r\n        let textEnd = html.indexOf('<')//有0 无-1\r\n        if(textEnd ===0){\r\n            // 1开始标签    \r\n            const startTagMatch = parseStartTag() //开始标签的内容\r\n            if(startTagMatch){\r\n                start(startTagMatch.tagName,startTagMatch.attrs)\r\n                continue\r\n            }\r\n            \r\n            // 2结束标签\r\n            let endTagMatch = html.match(endTag)\r\n            // console.log(endTagMatch,'endTagMatch');\r\n            if(endTagMatch){\r\n                advance(endTagMatch[0].length)\r\n                end(endTagMatch[1])\r\n                continue\r\n            }\r\n        }\r\n        let text \r\n        // 文本\r\n        if(textEnd>0){\r\n            // 获取文本内容\r\n            // console.log(html);\r\n            text = html.substring(0,textEnd)\r\n            // console.log(text);\r\n        }\r\n        if(text){\r\n            advance(text.length)\r\n            charts(text)\r\n            // console.log(html);\r\n        }\r\n        // break;\r\n    }\r\n    function parseStartTag(){\r\n        // 匹配开始标签\r\n        const start = html.match(startTagOpen)//1结果 2false\r\n        // console.log(start);\r\n        if(!start) return false\r\n        // 创建ast语法树\r\n        let match = {\r\n            tagName:start[1],\r\n            attrs:[],\r\n        }\r\n        // 删除开始标签\r\n        advance(start[0].length)\r\n        // 遍历属性,结束标签>\r\n        let attr,end \r\n        while(!(end = html.match(startTagClose) ) && (attr = html.match(attribute)) ){\r\n            // console.log(end);\r\n            // console.log(attr);\r\n            match.attrs.push({\r\n                name:attr[1],\r\n                value:attr[3]||attr[4]||attr[5]\r\n            })\r\n            advance(attr[0].length)\r\n        }\r\n        // console.log(end);\r\n        if(end){\r\n            advance(end[0].length)\r\n            return match\r\n        }\r\n    }\r\n    function advance(n){\r\n       html =  html.substring(n)\r\n        // console.log(html);\r\n    }\r\n    return root\r\n}\r\n  ","//   <div id='app'>hello{{msg}}<h></h></div>\r\n// render(){ //_c解析标签\r\n//     return _c('div',{id:app},_v('hello'+_s(msg)),_c('h',''))\r\n// }\r\n// 插值表达式\r\nconst defaultTagRE = /\\{\\{((?:.|\\r?\\n)+?)\\}\\}/g\r\n\r\n\r\nfunction genProps(attrs){\r\n    let str =''\r\n    for(let i = 0;i<attrs.length;i++){\r\n        let attr = attrs[i]\r\n        // 处理style属性\r\n        let obj = {}\r\n        if(attr.name=='style'){\r\n            attr.value.split(';').forEach(item=>{\r\n                let [key,val]=item.split(':')\r\n                obj[key] = val\r\n            })\r\n            attr.value = obj\r\n        }\r\n        str += `${attr.name}:${JSON.stringify(attr.value)},`\r\n    }\r\n     return `{${str.slice(0,-1)}}`\r\n}\r\n// 处理子节点\r\nfunction genChildren(el){\r\n    let children = el.children\r\n    // console.log(children);\r\n    if(children){\r\n        return children.map(child=>gen(child)).join(',')\r\n    }\r\n}\r\nfunction gen(node){\r\n    // 元素 _c\r\n    if(node.type === 1){\r\n        return generate(node)\r\n    }else{\r\n        //文本\r\n        // 1.纯文本 _v\r\n        // 2.插值表达式 _s\r\n        let text = node.text //获取文本\r\n        if(!defaultTagRE.test(text)){\r\n            // console.log(text);\r\n            // 普通文本\r\n            return `_v(${JSON.stringify(text)})`\r\n        }\r\n        // 特殊文本 带有插值表达式 {{}} \r\n        let tokens = []\r\n        let lastindex = defaultTagRE.lastIndex = 0 //正则调用多次的情况lastIndex匹配过后置位0可以再次使用 {{a}} {{b}}\r\n        let match \r\n        while (match = defaultTagRE.exec(text)) {\r\n            // console.log(match);\r\n            // hello {{msg}} dd\r\n            let index = match.index\r\n            if(index > lastindex){\r\n                // 添加内容\r\n                tokens.push(JSON.stringify(text.slice(lastindex,index)))\r\n            }\r\n            tokens.push(`_s(${match[1].trim()})`)\r\n            lastindex = index + match[0].length\r\n\r\n        }\r\n        if(lastindex<text.length){\r\n            tokens.push(JSON.stringify(text.slice(lastindex)))\r\n        }\r\n        return `_v(${tokens.join('+')})`\r\n    }\r\n}\r\nexport function generate(el){\r\n    // 处理子节点\r\n    let children = genChildren(el)\r\n    // console.log(children);\r\n    // 字符串模板\r\n    let code = `_c('${el.tag}',${el.attrs.length?`${genProps(el.attrs)}`:'undefined'}${children?`,${children}`:''})`\r\n    // console.log(code);\r\n    // _c('div',{id:\"app\",style:{\"color\":\"cyan\",\"margin\":\"10px\"}},_v(\"\\n        hello \"+_s(msg)+\" \\n        \"),_c('h2',undefined,_v(\"张三\")),_v(\"\\n    \"))\r\n    return code\r\n\r\n}","import {parseHTML} from './parseAst';\r\nimport {generate} from './generate';\r\nexport function compileToFunction(el){\r\n    // 1.将html变成ast语法树\r\n    let ast = parseHTML(el)\r\n\r\n    // 2.将ast语法树 变成render函数\r\n        // (1) ast语法树变成字符串拼接 (2) 字符串变成render函数 with()\r\n    \r\n    let code = generate(ast) // _c节点 _v文本 _s变量\r\n    // console.log(code);\r\n    let render = new Function(`with(this){return ${code}}`)\r\n    // console.log(render);\r\n\r\n    // ƒ anonymous(\r\n        //     ) {\r\n            //     with(this){return _c('div',{id:\"app\",style:{\"color\":\"cyan\",\"margin\":\"10px\"}},_v(\"\\n        hello \"+_s(msg)+\" \\n        \"),_c('h2',undefined,_v(\"张三\")),_v(\"\\n    \"))}\r\n    //     }\r\n    \r\n    // with的用法 改变作用域 继而使模板里的变量name 可以直接显示为this.name\r\n    // let obj = {a:1,b:2}\r\n    // with(obj){\r\n        //     console.log(a,b);\r\n        // }\r\n        \r\n    return render\r\n    // 3. 将render函数变成虚拟dom vnode init.js里实现\r\n\r\n\r\n}","\r\nexport const HOOKS = [\r\n    \"beforecreate\",\r\n    \"created\",\r\n    \"beforeMount\",\r\n    \"mounted\",\r\n    \"beforeupdate\",\r\n    \"updated\",\r\n    \"beforeDestroy\",\r\n    \"destroyed\"\r\n]\r\n// 策略模式\r\nlet starts = {}\r\nstarts.data = function(parentVal,childVal){\r\n    return childVal\r\n\r\n}//合并data\r\n// starts.computed = function(){}\r\n// starts.watch = function(){}\r\n// starts.methods = function(){}\r\n// 遍历声明周期HOOKS\r\nHOOKS.forEach(hooks=>{\r\n    starts[hooks] = mergeHooks\r\n})\r\n\r\n// console.log(starts);\r\nfunction mergeHooks(parentVal,childVal){\r\n    // console.log(parentVal,childVal);\r\n    // {created:[a,b,c],data:[a,b]...}\r\n    if(childVal){\r\n        if(parentVal){\r\n            return parentVal.concat(childVal)\r\n        }else{\r\n            return [childVal] // \r\n        }\r\n    }else{\r\n        return parentVal\r\n    }\r\n}\r\n\r\nexport function mergeOptions(parent,child){\r\n    // console.log(parent,child);\r\n    const options = {}\r\n    // {created:[a,b,c],data:[a,b]...}\r\n    for(let key in parent){\r\n        mergeField(key)\r\n    }\r\n    for(let key in child){\r\n        mergeField(key)\r\n    }\r\n    function mergeField(key){\r\n        //  策略模式\r\n        if(starts[key]){\r\n            options[key] = starts[key](parent[key],child[key])\r\n        }else{\r\n            options[key] = child[key]\r\n        }\r\n    }\r\n    // console.log(options,'options');\r\n    return options\r\n}\r\n","import { mergeOptions } from \"../utils/index\"\r\n\r\nexport function initGlobApi(Vue){\r\n    // {created:[a,b,c],data:[a,b]...}\r\n    Vue.options = {}\r\n    Vue.Mixin = function(mixin){\r\n        // 对象的合并\r\n        // console.log(mixin);\r\n        // console.log(Vue.options,this.options);\r\n        this.options = mergeOptions(this.options,mixin)\r\n    }\r\n}\r\n","// 获取原来的数组方法\r\nlet oldArrayProtoMethods = Array.prototype\r\n// 继承 创建新的方法对象\r\nexport let arrMethods = Object.create(oldArrayProtoMethods)\r\n\r\nlet methods = ['push','pop',\"unshift\",\"shift\",\"splice\"]\r\n\r\nmethods.forEach(item=>{\r\n    arrMethods[item] = function(...args){\r\n        // console.log('劫持数组');\r\n       let result =  oldArrayProtoMethods[item].apply(this,args)//this当前实例对象，\r\n        //observe中把类整体赋值给了__ob__可供在此调用数据劫持方法obseveArray\r\n\r\n        //args :push时为添加的数组参数\r\n        // 追加的数组对象进行数据劫持 push unshift  splice(第三个参数时新增的)\r\n        let inserted;\r\n        switch(item){\r\n            case 'push':\r\n            case 'unshift':\r\n                inserted = args\r\n                break;\r\n            case 'splice':\r\n                inserted = args.splice(2)//arr.splice(0,1,{a:6})\r\n                break\r\n        }\r\n\r\n        // console.log(this,'this');//当前调用的数组对象\r\n        let ob = this.__ob__\r\n        if(inserted){\r\n            //对添加的对象进行劫持\r\n            ob.observeArray(inserted)\r\n        }\r\n        // console.log(inserted,111);\r\n        ob.dep.notify()\r\n       return result\r\n    }\r\n})","let id = 0\r\nclass Dep{\r\n    constructor(){\r\n        this.id = id ++\r\n        this.subs = []\r\n    }\r\n    // 收集 watcher\r\n    depend(){\r\n        // console.log(Dep.target);\r\n        // 希望watcher可以存放dep 双向记忆\r\n\r\n        // this.subs.push(Dep.target) //转至 watcher里 addDep添加\r\n        Dep.target.addDep(this) \r\n        // 在watcher中deps添加dep\r\n        // this.deps.push(dep)\r\n        // this.depsId.add(id)\r\n        // ==>\r\n        // dep.addSub(this(watcher)) //dep中subs也添加当前watcher\r\n\r\n    }\r\n    addSub(watcher){\r\n        this.subs.push(watcher)\r\n    }\r\n    // 更新 watcher\r\n    notify(){\r\n        console.log('notify-subs-arr 执行update',this.subs);\r\n        this.subs.forEach(watcher=>{\r\n            watcher.update()\r\n        })\r\n    }\r\n}\r\n// 添加watcher\r\nDep.target = null\r\n// 处理多个watcher 渲染的 和 coputed的\r\nlet stack = [] \r\nexport function pushTarget(watcher){\r\n    Dep.target = watcher\r\n    // 入栈\r\n    stack.push(watcher) \r\n}\r\nexport function popTarget(){\r\n    // Dep.target = null\r\n    // 解析一个watcher删除一个watcher\r\n    // console.log(stack,11);\r\n    stack.pop()\r\n    Dep.target = stack[stack.length-1] //获取前面的一个watcher\r\n}\r\nexport default Dep","import { arrMethods } from \"./arr\"\r\nimport Dep from './dep'\r\nexport function observer(data){\r\n    if(typeof data != 'object' || data == null){\r\n        return data\r\n    }\r\n    return new Observer(data)\r\n\r\n}\r\n\r\nclass Observer{\r\n    constructor(data){\r\n        // 定义一个属性__ob__ 指向本身实例\r\n        Object.defineProperty(data,'__ob__',{\r\n            enumerable:false,\r\n            value:this,//this当前实例 this.observeArray\r\n        })\r\n        this.dep = new Dep() //给所有的对象类型添加一个dep\r\n\r\n        if(Array.isArray(data)){\r\n           \r\n            // 对数组的方法进行劫持行操作\r\n            data.__proto__ = arrMethods\r\n            // 如果是对象数组，对数组对象劫持\r\n            this.observeArray(data)\r\n        }else{\r\n            this.walk(data) \r\n        }\r\n    }\r\n    // 遍历对象的属性，响应式劫持\r\n    walk(data){\r\n        let keys = Object.keys(data)\r\n        for(let i =0;i<keys.length;i++){\r\n            let key = keys[i]\r\n            let value = data[key]\r\n            defineReactive(data,key,value)\r\n        }\r\n    }\r\n    // 遍历对象数组\r\n    observeArray(value){\r\n        value.forEach(data=>{\r\n            observer(data)\r\n        })\r\n    }\r\n\r\n}\r\n// 每一个defineReactive方法，会创建一个私有属性 dep 即Dep的实例\r\nfunction defineReactive(data,key,value){\r\n    let childDep = observer(value)\r\n    // 给每个属性添加一个dep\r\n    let dep = new Dep() //私有属性\r\n    console.log(key,'defineReactive初始化响应式',dep);\r\n    Object.defineProperty(data,key,{\r\n        get(){\r\n            // console.log(childDep,'childDep');\r\n            // console.log(Dep.target,1111);\r\n            if(Dep.target){ \r\n            //注意此处是大写,target是静态私有变量不是实例的属性\r\n                dep.depend()\r\n                 // 在watcher中deps添加dep\r\n                // this.deps.push(dep)\r\n                // this.depsId.add(id)\r\n                // ==>\r\n                // dep.addSub(this(watcher)) //dep中subs也添加当前watcher\r\n                console.log('执行 observe 中的getter,获取最新的值',dep,key);\r\n                if(childDep.dep){\r\n                    // 如果有 进行数组收集\r\n                    childDep.dep.depend() \r\n                }\r\n            }\r\n            // console.log(dep,'dep111');\r\n            // console.log('获取pbj');\r\n            return value\r\n        },\r\n        set(newValue){\r\n            // console.log('设置obj');\r\n            if(newValue==value){\r\n                return\r\n            }\r\n            console.log('observe set 监听name修改');\r\n            observer(newValue)\r\n            value = newValue\r\n            // 更新依赖\r\n            dep.notify()\r\n        }\r\n    })\r\n}\r\n","let callback = []\r\nlet pending = false\r\n\r\nfunction flush(){\r\n    // console.log(222);\r\n    callback.forEach(cb=>cb())\r\n    pending = false\r\n}\r\n\r\nlet timerFunc \r\n// 处理兼容性问题\r\nif(Promise){\r\n    timerFunc = ()=>{\r\n        Promise.resolve().then(()=>{\r\n            // console.log(1.5);\r\n            flush()\r\n        })\r\n    }\r\n}else if(MutationObserver){ //h5处理异步\r\n    // 监听dom变化，监控完毕再异步更新\r\n    let observe = new MutationObserver(flush)\r\n    //创建文本\r\n    let textNode = document.createTextNode(1) \r\n    //观测文本内容\r\n    observe.observe(textNode,{characterData:true})\r\n    timerFunc = ()=>{\r\n        textNode.textContent = 2\r\n    }\r\n}else if(setImmediate){ // ie支持\r\n    timerFunc = ()=>{\r\n        setImmediate(flush)\r\n    }\r\n}\r\nexport function nextTick(cb){\r\n    // console.log(cb,111);\r\n    // 队列 //  1 vue 自己的nexttick 2 用户调用的\r\n    callback.push(cb)\r\n    // [cb1,cb2]\r\n    if(!pending){\r\n        // vue3 使用promise.then\r\n        // vue2 处理兼容问题\r\n        timerFunc()//异步执行\r\n        pending = true\r\n    }\r\n}","import { nextTick } from \"../utils/nextTick\"\r\nimport { popTarget, pushTarget } from \"./dep\"\r\nimport Dep from './dep'\r\n// 1 同过这个类 watcher实现更新\r\nlet id = 0\r\nclass watcher{\r\n    constructor(vm,updateComponent,cb,options){\r\n        // callback 标识\r\n        this.vm = vm\r\n        this.exprOrfn = updateComponent\r\n        this.cb = cb\r\n        this.options = options\r\n        this.id = id++\r\n        this.user = !!options.user //!! 保证为布尔值\r\n        this.lazy = options.lazy // 如果为true,是computed属性\r\n        this.dirty = this.lazy // 取值时，表示用户是否执行\r\n        this.deps = [] //watcher存放dep \r\n        this.depsId = new Set() // 存放不重复的dep id\r\n        // 判断\r\n        if(typeof updateComponent === 'function'){\r\n            //初始化$moutned会执行一次渲染：\r\n            // initMixin => _init => $mounted => (lifecyle)mountComponent => new Watcher\r\n            this.getters = updateComponent //更新视图\r\n        }else{\r\n            //watch监听的属性名 key\r\n            // 字符串变成函数\r\n            this.getters =  function(_vm){\r\n                console.log('$watch的watcher.get方法$,取当前watcher的值赋给watcher.value');\r\n                console.log('取值过程中，调用的vm.值，触发observe的getter事件，把当前的watch watcher收集到各个属性的dep中');\r\n                console.log('当set一个值时，会触发当前watch watcher的方法，判断user =true 执行回调函数cb,实现监听');\r\n                // a.b.c 深层监听\r\n                // console.log(_vm,111);\r\n                let path = _vm.exprOrfn.split('.')\r\n                let obj = vm\r\n                for(let i =0 ;i<path.length;i++){\r\n                    obj = obj[path[i]]\r\n                }\r\n                return obj //vm.a.b.c\r\n            }\r\n        }\r\n        console.log('=== watcher-init',this);\r\n        // 初始化 dom挂载mountComponent中会执行一次\r\n\r\n        // 初次渲染  保存初始值 (computed模式初始不加载)\r\n        this.value = this.lazy ? void 0: this.get() //保存watcher初始值\r\n    }   \r\n    addDep(dep){\r\n        // 去重\r\n        let id = dep.id\r\n        //depsId set解构使用has方法判断是否存在\r\n        if(!this.depsId.has(id)){\r\n            this.deps.push(dep)\r\n            this.depsId.add(id)//set解构 用add方法添加\r\n            dep.addSub(this)\r\n        }\r\n\r\n    } \r\n    get(){\r\n\r\n        console.log('$render&&computed$-watcher.get 方法执行');\r\n        // 初始化 dom挂载mountComponent中会执行一次\r\n        pushTarget(this) // 给Dep添加watcher => Dep.target = watcher \r\n        // console.log(this.getters,222);\r\n        console.log('Dep.target的值',Dep.target);\r\n        console.log('执行render方法或computed方法');\r\n        const value = this.getters.call(this.vm,this)\r\n        console.log('render 完毕 pop Dep.target');\r\n        // 情况1 => 初始化渲染页面\r\n         //渲染页面 vm._update(vm._render) _s(msg) 拿到with函数vm.msg\r\n        // 渲染过程中会调用一次observe中的getter,执行  该初始化渲染的watcher的deps push了new的dep\r\n        //  new的dep的subs push了 这个初次渲染的watcher实例\r\n\r\n        // 情况2 => computed的watcher，初始化watcher,lazy=true不调用get,第一次取computed值时，执行watcher.evaluate方法\r\n        //  => 从而执行watcher.get方法，执行该方法时：先执行pushTarget方法，给Dep.target添加computed的watcher,然后\r\n        // 调用计算方法，当取vm.变量值时=>（触发observe中的get方法，发现有Dep.target(computed的wather),defineReactive私有变量的\r\n        // dep和计算computed的watcher互相收集依赖，当触发变量的set时,触发dep.notify遍历deps执行watcher.update,计算watcher也得到更新)\r\n        // update方法执行queueWatcher => flushWatcher => 遍历watcher.run  => watcher.get,\r\n        // computed的watcher= lazy为true不执行queueWatcher方法,dirity赋值为true;\r\n        // 执行渲染watcher,执行get方法,Dep.target值取渲染watcher,然后取vm.遍历:(1).普通变量，取observe.getter方法,新的渲染watcher和dep互相收集\r\n    //      (2). computed变量，取值触发 computed中的createComputedGetter,\r\n                // dirty为true 执行计算方法evaluate,执行计算watcher的get中的computed计算函数，得到最新值；\r\n                // 执行computed的watcher.depend(),执行：deps[i].depend() => Dep.target.addDep(this) \r\n    //      => watcher.addDep => dep.addSub => dep中this.subs.push(watcher),互相收集;\r\n\r\n        popTarget() //取消watcher  Dep.target = stack[stack.length-1] //默认情况length-1 结果为null\r\n        // console.log(Dep.target);\r\n        return value //初始值\r\n    }\r\n    // 更新数据\r\n    update(){\r\n        // 不要数据更新后每次调用\r\n        // 缓存\r\n        // this.get()\r\n        \r\n        //lazy为ture 为computed\r\n        if(this.lazy){\r\n            this.dirty = true \r\n        }else{\r\n            queueWatcher(this)\r\n        }\r\n    }\r\n    run(){\r\n        // 更新取值 old new\r\n        let value = this.get()\r\n        let oldValue = this.value\r\n        this.value = oldValue\r\n        if(this.user){\r\n            // 执行handler 用户的watcher的cb\r\n            this.cb.call(this.vm,value,oldValue)\r\n        }\r\n    }\r\n    // computed 执行计算方法\r\n    evaluate(){\r\n        this.value = this.get()\r\n        this.dirty = false \r\n    }\r\n    // 相互收集\r\n    depend(){\r\n        // 收集渲染watcher,存放到dep中，dep再会存放watcher\r\n        // 最终可以通过watcher找到所有的dep,让所有的dep都记住渲染的watcher\r\n        let i = this.deps.length\r\n        while(i--){\r\n            this.deps[i].depend()\r\n        }\r\n    }\r\n}\r\nlet queue = []//将需要批量更新的watcher 存放队列中\r\nlet has = {}\r\nlet pending = false\r\n// 队列处理\r\nfunction flushWatcher(){\r\n    console.log(queue,'queue-真正执行update队列');\r\n     queue.forEach(watcher=>{\r\n        watcher.run() //防抖执行回调更新函数\r\n        // watcher.cb() // updated 声明周期函数 简易执行回调\r\n    })\r\n    queue =[]\r\n    has = {}\r\n    pending = true\r\n}\r\nfunction queueWatcher(watcher){\r\n    let id = watcher.id // 没一个组件都是同一个watcher\r\n    // console.log(666); //3次\r\n    if(has[id] == null){ //去重\r\n        queue.push(watcher)\r\n        has[id] = true\r\n        //防抖: 触发多次 只执行一次\r\n        if(!pending){\r\n            //异步 等待同步代码执行完毕 执行\r\n            // setTimeout(() => {\r\n           \r\n            // }, 0);\r\n            // nextTick 相当于定时器，\r\n            nextTick(flushWatcher)\r\n            pending = true\r\n        }\r\n    }\r\n}\r\nexport default watcher\r\n// vue更新策略:以组件为单位,给每一组件添加一个watcher,属性变化后,调用这个watcher\r\n\r\n// 收集依赖\r\n// vue  dep watcher data:{name,msg}\r\n// dep  : dep和data中的属性一一对应\r\n// watcher : 在视图上用几个,就有几个watcher\r\n// 一. 基本类型的关系\r\n// dep 与 watcher的关系:  一对多 dep.name = [w1,w2,w3...]\r\n\r\n\r\n//二. 实现对象的收集依赖\r\n// dep 和watcher的关系 多对多 computed \r\n// 三 数组更新\r\n// 1. 给所有的对象增加一个dep []\r\n// 2. 获取数组的值,会调用get方法,希望让当前的数组记住这个渲染的watcher\r\n//   (1) 需要获取当前dep\r\n//   (2) 当前面对数组取值的时候,就让数组的dep记住这个watcher\r\n// 3. 我们更新数组的时候,调用push,等等方法时,找到我们这个watcher\r\n\r\n","import { observer } from \"./observe/index\"\r\nimport { nextTick } from \"./utils/nextTick\"\r\nimport Watcher from \"./observe/watcher\"\r\nimport Dep from \"./observe/dep\"\r\n\r\nexport function initState(vm){\r\n    let ops = vm.$options\r\n    if(ops.props){\r\n        initProps(vm)\r\n    }   \r\n    if(ops.data){\r\n        initData(vm)// √\r\n    }\r\n    // 先初始化data,再初始化watch\r\n    if(ops.watch){\r\n        initWatch(vm)//√\r\n    }\r\n    if(ops.methods){\r\n        initMethods(vm)\r\n    }\r\n    if(ops.computed){\r\n        initComputed(vm) //√\r\n    }\r\n}\r\n\r\n/* initData------------------------------------------------------- */\r\n// 初始化data\r\nfunction initData(vm){\r\n    let data = vm.$options.data\r\n    // data()  this默认window \r\n    data = vm._data = typeof data == 'function'?data.call(vm):data \r\n\r\n    //将对象上的所有属性，代理到实例上{a:1,b:@}  defineProperty\r\n    for(let key  in data){\r\n        Proxy(vm,'_data',key)    \r\n    }\r\n\r\n    observer(data)\r\n}\r\nfunction Proxy(vm,source,key){\r\n    Object.defineProperty(vm,key,{\r\n        get(){\r\n            return vm[source][key]\r\n        },\r\n        set(val){\r\n            vm[source][key] = val\r\n        }\r\n    })\r\n}\r\n/* initData------------------------------------------------------- */\r\n\r\nfunction initProps(){}\r\n\r\n/* initWatch------------------------------------------------------- */\r\n// 一. watch4种使用方式\r\n// 1. 属性方法\r\n// 2. 属性数组\r\n// 3.属性：对象\r\n// 4.属性：字符串\r\n// watch:{\r\n//     'a'(newVal,oldVal)=>{\r\n//         console.log(newVal);\r\n//     },\r\n//     'b':[\r\n        // (newVal,oldVal)=>{\r\n        //     console.log(newVal);\r\n        // },\r\n//         (newVal,oldVal)=>{\r\n//             console.log(newVal);\r\n//         }\r\n//     ],\r\n        // c:{\r\n            // handler(){\r\n            //     console.log('xxx');\r\n            // }\r\n        // },\r\n        // d:'aa'\r\n// },\r\n// methods: {\r\n//     aa(){console.log('ccc')}\r\n// },\r\n\r\n// 二.vue中的watch格式化\r\n// 三 watch的最终实现方式, watch\r\n// 通过高阶函数，\r\n// 四  面试： watch和computed的区别\r\n// computed具有缓存机制，通过dirty变量是实现\r\n// watch 回调函数\r\n\r\n// 问题：视图中 变量没更新dom\r\n// 因为这里有多个watcher,渲染watcher  和 computed watcher\r\nfunction initWatch(vm){\r\n// 1.获取watch\r\n    let watch = vm.$options.watch\r\n    // console.log('watch:',watch);\r\n    // 2. 遍历\r\n    for(let key in watch){\r\n        let handler = watch[key];// 数组,对象,字符,函数\r\n        if(Array.isArray(handler)){\r\n            // 处理数组形式\r\n            handler.forEach(item=>{\r\n                createWatcher(vm,key,item)\r\n            })\r\n        }else{//对象 字符 函数\r\n            // 创建一个方法来处理\r\n            createWatcher(vm,key,handler)\r\n            \r\n        }\r\n    }\r\n\r\n}\r\n// vm.$watch(()=>{return 'a'})//返回的是watcher的属性\r\nfunction createWatcher(vm,exprOrfn,handler,options){\r\n    // 处理handler\r\n    if(typeof handler == 'object'){\r\n        // d:{\r\n        //     handler(val){\r\n        //         console.log('d',val);\r\n        //     }\r\n        // }\r\n        options = handler //用户的配置项 \r\n        handler = handler.handler\r\n    }\r\n    if(typeof handler =='string'){\r\n        // e:'fun1'\r\n        handler = vm[handler] //将实例上的methods的fun1作为handler\r\n    }\r\n\r\n    // 其他是函数\r\n    // watch最终处理 $watch这个方法\r\n    return vm.$watch(vm,exprOrfn,handler,options)\r\n\r\n}\r\n/* initWatch------------------------------------------------------- */\r\n\r\nfunction initMethods(){}\r\n\r\n/* initComputed------------------------------------------------------- */\r\nfunction initComputed(vm){\r\n    let computed = vm.$options.computed\r\n    // 1.通过watcher实现\r\n    let watcher = vm._computedWatcher = {}\r\n    // 2.将computed属性通过defineProperty进行处理\r\n    for(let key in computed){\r\n        let userDef = computed[key]\r\n        // 获取get\r\n        let getters = typeof userDef =='function' ?userDef : userDef.get\r\n        // 给每一个computed属性添加一个watcher getters为computed函数或对象的get函数\r\n        watcher[key] =  new Watcher(vm,getters,()=>{},{lazy:true})\r\n        // defineReactive\r\n        //lazy不调用时不计算 \r\n        defineComputed(vm,key,userDef) \r\n        \r\n    }\r\n    // console.log(vm);\r\n}\r\n\r\nlet sharePropDefinition = {}\r\n// 响应式处理computed的值\r\nfunction defineComputed(target,key,userDef){\r\n    sharePropDefinition = {\r\n        enumable:true,\r\n        configurable:true,\r\n        get:()=>{},\r\n        set:()=>{}\r\n    }\r\n    if(typeof userDef == 'function'){\r\n        // sharePropDefinition.get  = userDef\r\n        sharePropDefinition.get  = createComputedGetter(key)\r\n    }else{\r\n        // 对象\r\n        // sharePropDefinition.get = userDef.get\r\n        sharePropDefinition.get  = createComputedGetter(key)\r\n        sharePropDefinition.set = userDef.set\r\n    }\r\n    //  代理 target:vue  key computed的属性\r\n    Object.defineProperty(target,key,sharePropDefinition)\r\n\r\n}\r\n\r\n// 高阶函数,缓存机制\r\nfunction createComputedGetter(key){//返回用户的computed方法\r\n    // return 函数里的 this指向被调用对象的this => vm\r\n    // 不这样写this为函数本身,调用的时候才会走return里的内容\r\n\r\n\r\n    // 该方法执行了\r\n        //1.响应式处理key的getter() => 对应watcher的value\r\n        // （1） 如果第一次取值dirty为true则执行watcher的evaluate方法计算computed的函数，并赋值给watcher.value缓存\r\n        // （2） 满足条件Dep.target有值;收集computed属性的watcehr依赖;执行顺序为; \r\n            //  watcher.depend() =>\r\n            //  deps[i].depend() => Dep.target.addDep(this) => watcher.addDep => \r\n            //  dep.addSub => dep中this.subs.push(watcher)\r\n        // （3）Dep中使用stack=[]接收watcher,Dep.target赋值最后一个,如果有computed则Dep需要收集两个;\r\n        // (4) watcher.update更新数据时=>ueueWatcher=>queue.push(watcher)=>flushWatcher=>遍历queue中的watcher.run()\r\n        \r\n    // 2. 当set对应data值时,会触发dep.notify方法执行watcher.update() => watcher.run()从而执行计算和刷新watcher\r\n    return function(){\r\n        // dirty 为true执行用户方法\r\n        let watcher = this._computedWatcher[key]\r\n        console.log('$lazy$-调用computed lazy watcher的getter');\r\n        if(watcher){\r\n            if(watcher.dirty){//dirty true第一次取值，计算get;false读取缓存 watcher.value\r\n                // 执行方法,求值 重新定义一个方法\r\n                console.log('$lazy$ dirty = true 初始化计算computed方法');\r\n                watcher.evaluate() //运行用户的computed方法 触发observe的get会进行依赖收集\r\n            }\r\n            // 判断是否有渲染wathcer，如果有执行 ：相互存放watcher\r\n            if(Dep.target){\r\n                // 比如 fullName 由 firstName和lastName组成 \r\n                // 渲染watcher取fullName时，开始取fisrtNmae和lastName,也就是渲染watcher调用computed watcher\r\n                // 这两个属性的dep收集当前的computed watcher ,这个计算watcher收集这两个属性的dep\r\n                console.log('computed-watcher互相收集',Dep.target);\r\n                // 说明 还有渲染watcher,收集起来\r\n                watcher.depend()  //计算watcher收集渲染watcher\r\n            }\r\n            // 重复使用，不重新计算\r\n            return watcher.value    \r\n        }\r\n    }\r\n}\r\n/* initComputed------------------------------------------------------- */\r\n\r\n/* stateMixin------------------------------------------------------- */\r\nexport function stateMixin(vm){\r\n    // 队列  vue自己的nexttick\r\n    //  1 vue 自己的nexttick 2 用户调用的\r\n    vm.prototype.$nextTick = function(cb){\r\n        // 数据更新之后获取到最新的dom\r\n        // console.log(cb);\r\n        nextTick(cb)\r\n    }\r\n\r\n    // watch监听属性的实现\r\n    vm.prototype.$watch = function(vm,exprOrfn,handler,options={}){\r\n        // 实现watcher的方法就是new  watcher\r\n\r\n        // exprOrfn 表达式或方法  user:用户的属性,watcher中监测到watch变化执行回调标识\r\n        let watcher =  new Watcher(vm,exprOrfn,handler,{...options,user:true})\r\n        \r\n        // immediate立即执行\r\n        if(options.immediate){\r\n            handler.call(vm)\r\n        }\r\n\r\n    }\r\n}\r\n/* stateMixin------------------------------------------------------- */\r\n","// 将虚拟dom变成真实dom\r\nexport function patch(oldVnode,vnode){\r\n    // console.log(oldVnode,vnode);\r\n    // 第一次渲染 oldnode 是一个真实dom\r\n    // console.log(oldVnode.nodeType);\r\n    if(oldVnode.nodeType == 1){\r\n        // 1 创建真实的dom\r\n        // console.log(oldVnode,vnode);\r\n        let el = createEl(vnode)\r\n        // console.log(el);\r\n        // 2 替换 （1）获取父节点 （2） 插入当前节点 （3）老元素删除\r\n        let parentEl = oldVnode.parentNode\r\n        // console.log(parentEl);\r\n        parentEl.insertBefore(el,oldVnode.nextsibling)\r\n        parentEl.removeChild(oldVnode)\r\n        return el\r\n    }else{\r\n        // 第二次渲染，oldVnode是虚拟dom,进行比对，进行最小量更新\r\n        /*  diff算法,最小量更新 */\r\n        // 1.元素不一样 整体替换\r\n        if(oldVnode.tag!==vnode.tag){\r\n            oldVnode.el.parentNode.replaceChild(createEl(vnode,oldVnode.el))\r\n        }\r\n        // 2. 标签一样，text属性\r\n        if(!oldVnode.tag){\r\n            // 没有tag是文本\r\n            if(oldVnode.text !== vnode.text){\r\n                return oldVnode.el.textContent = vnode.text\r\n            }\r\n        }\r\n        // 2.1 属性不同(标签一样) <div id=\"a\"> => <div id=\"b\">\r\n        // 方法 1直接复制\r\n        let el = vnode.el = oldVnode.el\r\n        updateProps(vnode,oldVnode.data)\r\n\r\n        //3. 子元素diff 子元素:\r\n        let oldChildren = oldVnode.children || []\r\n        let newChildren = vnode.children || []\r\n        if(oldChildren.length && newChildren.length){\r\n            updateChild(oldChildren,newChildren,el)\r\n        }else if(oldChildren.length){\r\n            el.innerHtml = ''\r\n        }else if(newChildren.length){\r\n            for(let i = 0;i<newChildren.length;i++){\r\n                let child = newChildren[i]\r\n                // 添加真实dom\r\n                el.appendChild(createEl(child))\r\n            }\r\n        }\r\n    }\r\n\r\n}\r\nfunction updateChild(oldChildren,newChildren,parent){\r\n    // vue diff算法\r\n    // dom中操作元素：头部添加，尾部添加，倒序和正序的的方式\r\n    //  vue2 采用双指针的方法\r\n    // 1. 创建双指针\r\n    // console.log(oldChildren,newChildren);\r\n    let oldStartIndex = 0 //old开头索引\r\n    let oldStartVnode = oldChildren[oldStartIndex] //old开始元素\r\n    let oldEndIndex = oldChildren.length-1\r\n    let oldEndVnode = oldChildren[oldEndIndex]    \r\n\r\n    let newStartIndex = 0 //old开头索引\r\n    let newStartVnode = newChildren[newStartIndex] //old开始元素\r\n    let newEndIndex = newChildren.length-1\r\n    let newEndVnode = newChildren[newEndIndex]\r\n\r\n    function isSameVnode(oldContext,newContext){\r\n        return (oldContext.tag === newContext.tag) && (oldContext.key == newContext.key)\r\n    }\r\n    // 创建旧元素映射表\r\n    function makeIndexByKey(child){\r\n        let map = {}\r\n        child.forEach((item,index)=>{\r\n            if(item.key){\r\n                map[item.key] = index\r\n            }\r\n        })\r\n        return map\r\n    }\r\n    let map = makeIndexByKey(oldChildren)\r\n    console.log(map);\r\n    // 2. 遍历\r\n    while(oldStartIndex<=oldEndIndex && newStartIndex <= newEndIndex){ //？？\r\n        // 比对 开头元素\r\n        if(isSameVnode(oldStartVnode,newStartVnode)){\r\n            // 从前往后比对\r\n            console.log('con');\r\n            patch(oldStartVnode,newStartVnode)\r\n            // 移动指针\r\n            oldStartVnode = oldChildren[++oldStartIndex]\r\n            newStartVnode = newChildren[++newStartIndex]\r\n    \r\n        }else if(isSameVnode(oldEndVnode,newEndVnode)){\r\n            // 从后往前比对\r\n            patch(oldEndVnode,newEndVnode)\r\n            // 移动指针\r\n            oldEndVnode = oldChildren[--oldEndIndex]\r\n            newEndVnode = newChildren[--newEndIndex]\r\n    \r\n        }else if( isSameVnode(oldStartVnode,newEndVnode)){\r\n            // 交叉比对 old头与start尾\r\n            patch(oldStartVnode,newEndVnode)\r\n            oldStartVnode = oldChildren[++oldStartIndex]\r\n            newEndVnode = newChildren[--newEndIndex]\r\n        }else if(isSameVnode(oldEndVnode,newStartVnode)){\r\n            // 交叉对比  old尾与start头\r\n            patch(oldEndVnode,newStartVnode)\r\n            oldEndVnode = oldChildren[--oldEndIndex]\r\n            newStartVnode = newChildren[++newStartIndex]\r\n        }else{\r\n            // 暴力比对:子集没有任何关系(遍历对比)\r\n            // 1. 创建旧元素映射表   //{a:0,b:1,c:2}\r\n            let moveIndex = map[newStartVnode.key]\r\n            // 2. 从旧映射表中寻找元素\r\n            if(moveIndex == undefined){\r\n                // 没有找到元素，添加到最前面\r\n                // p:已有的虚拟dom的el属性是创建对应的真实dom\r\n                parent.insertBefore(createEl(newStartVnode),oldStartVnode.el)\r\n            }else{//有\r\n                //  获取到要插入的的元素\r\n                let moveVnode = oldChildren[moveIndex]   \r\n                oldChildren[moveIndex] = null//防止数组塌陷\r\n                //？？为什么插入到oldStartVnode.el之前\r\n                parent.insertBefore(createEl(moveVnode),oldStartVnode.el) \r\n                // 可能问题，可能插入的元素有子元素\r\n                patch(moveVnode,newStartVnode) // newEndVnode???\r\n            }\r\n            // 新元素指针位移，继续循环\r\n            newStartVnode = newChildren[++newStartIndex]\r\n\r\n        }\r\n        // key的作用: vnode更新，找到已有key值的vnode的话会复制该节点，而不是创建节点，性能提升\r\n\r\n    }\r\n    // while遍历完成后 index最后比对的那一个 \r\n    // 添加多余的子元素/ old3 new4\r\n    if(newStartIndex<=newEndIndex){\r\n        for(let i = newStartIndex;i<=newEndIndex;i++){\r\n            parent.appendChild(createEl(newChildren[i]))\r\n        }\r\n    }\r\n\r\n    // 将多余元素去掉\r\n    if(oldStartIndex<=oldEndIndex){\r\n        for(let i = oldStartIndex;i<=oldEndIndex;i++){\r\n            let child = oldChildren[i]\r\n            if(child!=null){\r\n                parent.removeChild(child.el) //删除元素\r\n            }\r\n        }\r\n    }\r\n\r\n    /* 测试diff算法 => 放置src/index.js里测似 */\r\n    //初始化创建vnode \r\n    // let vm1 = new Vue({data:{name:'zhangsan vnode1'}}) //\r\n    // // let render1 = compileToFunction(`<div id=\"a\" cc='cc' style=\"color:blue;font-size:18px\">{{name}}</div>`)\r\n    // let render1 = compileToFunction(`<ul>\r\n    // <li key='a'>a</li>\r\n    // <li key='b'>b</li>\r\n    // <li key='c'>c</li>\r\n    // <li key='f'>f1</li>\r\n    // </ul>`)\r\n    // let vnode1 = render1.call(vm1)\r\n    // document.body.appendChild(createEl(vnode1))\r\n\r\n    // // 数据更新 计算diff最小化更新 => patch方法\r\n    // let vm2 = new Vue({data:{name:'lisi vnode2'}}) //\r\n    // // let render2 = compileToFunction(`<div id=\"b\" name=\"test\" style=\"color:gray;font-size:22px\">{{name}}</div>`)\r\n    // let render2 = compileToFunction(`<ul>\r\n    // <li key='f'>f</li>\r\n    // <li key='g'>g</li>\r\n    // <li key='e'>e</li>\r\n    // <li key='h'>h</li>\r\n    // <li key='a'>a2</li>\r\n    // </ul>`)\r\n    // let vnode2 = render2.call(vm2)\r\n    // // document.body.appendChild(createEl(vnode2))\r\n    // // 通过patch比对\r\n    // setTimeout(() => {\r\n    //      patch(vnode1,vnode2)\r\n    // }, 2000);\r\n\r\n}\r\n// 添加属性\r\nfunction updateProps(vnode,oldProps={}){//第一次属性\r\n    let newProps = vnode.data || {} //获取当前新节点属性 \r\n    let el = vnode.el //获取当前节点\r\n\r\n    // 1. 属性处理：old 有属性 新的没属性\r\n    for(let key in oldProps){\r\n        if(!newProps[key]){\r\n            // 删除当前节点的属性\r\n            el.removeAttribute(key)\r\n        }\r\n    }\r\n    // 2. 老vnode样式处理：老的style,样式处理 \r\n    let newStyle = newProps.style || {} //新样式\r\n    let oldStyle = oldProps.style || {}\r\n    for(let key in oldStyle){\r\n        if(!newStyle[key]){\r\n            el.style = ''\r\n        }\r\n    }\r\n    // 3.新vnode: 样式处理\r\n    for(let key in newProps){\r\n        if(key === 'style'){\r\n            for(let styleName in newProps.style){\r\n                el.style[styleName] = newProps.style[styleName]\r\n            }\r\n        }else if(key =='class'){\r\n            el.className = newProps.className\r\n        }else{\r\n            el.setAttribute(key,newProps[key])\r\n        }\r\n    }\r\n\r\n\r\n\r\n}\r\n\r\n// 创建真实dom\r\nexport function createEl(vnode){\r\n    let {tag,data,key,children,text} = vnode\r\n    if(typeof tag === 'string'){\r\n        // 标签\r\n        vnode.el = document.createElement(tag)\r\n        updateProps(vnode)\r\n        if(children.length){\r\n            children.forEach(child=>{\r\n                vnode.el.appendChild(createEl(child))\r\n            })\r\n        }\r\n        // for(let k in data){\r\n        //     if(k =='style'){\r\n        //         let styleStr=''\r\n        //         for(let l in data[k]){\r\n        //             styleStr += l \r\n        //             styleStr += ':'\r\n        //             styleStr += data[k][l]\r\n        //             styleStr += ';'\r\n        //         }\r\n        //         vnode.el.setAttribute(k,styleStr)\r\n\r\n        //     }else{\r\n        //         vnode.el.setAttribute(k,data[k])\r\n        //     }\r\n        // }\r\n        \r\n    }else{\r\n        vnode.el = document.createTextNode(text)\r\n    }\r\n    return vnode.el\r\n}\r\n\r\n\r\n// vue的渲染流程\r\n// 数据初始化 => 对模板进行编译 => 变成render函数\r\n//  => 通过render函数变成vnode => vnode变成真实dom\r\n//  insert页面\r\n\r\n\r\n\r\n// diff算法\r\n// 1. vue操作vnode  {tag:'div',data:'',children:[]}\r\n// 2. 真实dom\r\n// for(let key in app){\r\n//     console.log(key);\r\n// }\r\n\r\n// vue更新数据 通过diff算法实现(最小量更新) vnode比对\r\n// 1. 创建两个vnode\r\n// 2. 对比:在数据更新时,拿到老节点和新节点比对,不同的地方更新\r\n","import { patch } from \"./vnode/patch\"\r\nimport watcher from './observe/watcher';\r\nexport function mountComponent(vm,el){\r\n\r\n    callHook(vm,'beforeMounted')\r\n\r\n    // 更新组件的方法\r\n    // 1.vm._render将render函数变成虚拟dom\r\n    // 2. vm._update 将vnode变成真实dom \r\n    \r\n    // 实现自动更新\r\n    let updateComponent = ()=>{\r\n        // console.log(vm._render());\r\n        vm._update(vm._render())\r\n    }\r\n    // 更新数据\r\n    // constructor(vm,updateComponent,cb,options){\r\n    // 该实例最终会被收集到dep中\r\n    console.log('new render watcher');\r\n    new watcher(vm,updateComponent,()=>{\r\n        callHook(vm,'updated') //订阅\r\n    },true)\r\n\r\n    callHook(vm,'mounted')\r\n}\r\nexport function lifecycleMixin(Vue){\r\n    Vue.prototype._update = function(vnode){\r\n        let vm = this\r\n        // 需要区分首次渲染，还是更新\r\n        let prevVnode = vm._vnode //首次渲染，_vnode为null\r\n        if(!prevVnode){\r\n            vm.$el = patch(vm.$el,vnode)//旧dom，虚拟dom\r\n            vm._vnode = vnode \r\n        }else{\r\n            console.log('render函数渲染dom');\r\n            patch(vm.$el,vnode)\r\n        }\r\n    }\r\n} \r\n\r\n// 生命周期调用\r\nexport function callHook(vm,hook){\r\n    // console.log(vm);\r\n    const handlers = vm.$options[hook]\r\n    // [fn a,fn b,fn]\r\n    if(handlers){\r\n        for(let i =0;i<handlers.length;i++){\r\n            handlers[i].call(this)\r\n        }\r\n    }\r\n}","import { initState } from \"./initState\";\r\nimport {compileToFunction} from './compile/index'\r\nimport { callHook, mountComponent } from \"./lifecycle\";\r\nimport { mergeOptions } from \"./utils/index\";\r\nexport function initMixin(Vue){\r\n\r\n    Vue.prototype._init = function(options){\r\n        let vm = this\r\n        vm.$options = mergeOptions(Vue.options,options) \r\n        callHook(vm,'beforecreated')\r\n        // init 状态\r\n        initState(vm)\r\n        callHook(vm,'created')\r\n        \r\n        //渲染模板 el\r\n        if(vm.$options.el){\r\n            vm.$mounted(vm.$options.el)\r\n        }\r\n    }\r\n\r\n    // 创建$mounted\r\n    Vue.prototype.$mounted = function(el){\r\n        // console.log(el);\r\n        // el template render\r\n        let vm = this\r\n        let options = vm.$options\r\n        el = document.querySelector(el)\r\n        vm.$el = el // 真实dom\r\n        // 没有render函数\r\n        if(!options.render){\r\n            let template = options.template\r\n            // 没有template option \r\n            // 则 Compile el's outerHTML as template *\r\n            if(!template && el){\r\n                // 获取Html\r\n                el = el.outerHTML //html字符串\r\n                // <div id=\"app\">hello {{msg}} </div>\r\n                // 变成ast语法树 ,将ast语法树变成render函数\r\n                let render = compileToFunction(el)\r\n                // console.log(render);\r\n                // (1) 将render函数变成vnode\r\n                options.render = render\r\n                // (2) 将vnode变成真实DOM放到页面中\r\n            }\r\n            // 挂载组件\r\n            // 1.vm._render将render函数变成虚拟dom\r\n            // 2. vm._update 将vnode变成真实dom\r\n            // console.log(vm,el);\r\n            mountComponent(vm,el)\r\n        }\r\n    }\r\n}\r\n","export function renderMixin(Vue){\r\n    // 节点 创建标签\r\n    Vue.prototype._c = function(){\r\n        return createElement(...arguments)\r\n    }\r\n    // 文本\r\n    Vue.prototype._v = function(text){\r\n        return createText(text)\r\n    }\r\n    // 变量 _s(msg)\r\n    Vue.prototype._s = function(val){\r\n        return val == null?\"\":(typeof val == \"Object\")?JSON.stringify(val):val\r\n    }\r\n    Vue.prototype._render = function(){\r\n        let vm = this\r\n        let render = vm.$options.render //init.js 中定义options的render属性为render函数\r\n        let vnode  = render.call(this)\r\n        return vnode\r\n    }\r\n}\r\n\r\n\r\n// 创建元素\r\nfunction createElement(tag,data={},...children){\r\n    return vnode(tag,data,data.key,children)\r\n}\r\n\r\n// 创建文本\r\nfunction createText(text){\r\n    return vnode(undefined,undefined,undefined,undefined,text)\r\n}\r\n// 创建虚拟dom\r\nfunction vnode(tag,data,key,children,text){\r\n    return {\r\n        tag,\r\n        data,\r\n        key,\r\n        children,\r\n        text\r\n    }\r\n}","import { compileToFunction } from \"./compile/index\";\r\nimport { initGlobApi } from \"./global-api/index\";\r\nimport { initMixin } from \"./init\";\r\nimport { initState, stateMixin } from \"./initState\";\r\nimport { lifecycleMixin } from \"./lifecycle\";\r\nimport { renderMixin } from \"./vnode/index.js\"\r\nfunction Vue(options){\r\n     this._init(options)\r\n}\r\n\r\n// 给vue.prototype添加_init(initState(),$mounted)方法 ,$mounted方法 把挂载el内的html转为render字符串，转为虚拟dom，渲染成真实dom\r\n// initState方法在initState中定义执行initProps,initData,initWatch,initMethods,initComputed等初始化函数\r\ninitMixin(Vue) \r\n\r\nlifecycleMixin(Vue) //给vue.prototype添加_update方法 创建虚拟dom\r\nrenderMixin(Vue) //给Vue.prototype添加_c,_v,_s,render函数用来创建虚拟dom\r\nstateMixin(Vue) // 给Vue.prototype添加$nextTick  $watch方法 \r\n\r\n// 全局方法 Vuemixin vue.component extend...\r\ninitGlobApi(Vue) //Mixin (mergeOptions)\r\n\r\n\r\n\r\nexport default Vue"],"names":["ncname","qnameCapture","startTagOpen","RegExp","endTag","attribute","startTagClose","parseHTML","html","createAstElement","tag","attrs","children","type","parent","start","element","root","createdParent","stack","push","charts","text","replace","end","pop","length","textEnd","indexOf","startTagMatch","parseStartTag","tagName","endTagMatch","match","advance","substring","attr","name","value","n","defaultTagRE","genProps","str","i","obj","split","forEach","item","key","val","JSON","stringify","slice","genChildren","el","map","child","gen","join","node","generate","test","tokens","lastindex","lastIndex","exec","index","trim","code","compileToFunction","ast","render","Function","HOOKS","starts","data","parentVal","childVal","hooks","mergeHooks","concat","mergeOptions","options","mergeField","initGlobApi","Vue","Mixin","mixin","oldArrayProtoMethods","Array","prototype","arrMethods","Object","create","methods","args","result","apply","inserted","splice","ob","__ob__","observeArray","dep","notify","id","Dep","subs","target","addDep","watcher","console","log","update","pushTarget","popTarget","observer","Observer","defineProperty","enumerable","isArray","__proto__","walk","keys","defineReactive","childDep","get","depend","set","newValue","callback","pending","flush","cb","timerFunc","Promise","resolve","then","MutationObserver","observe","textNode","document","createTextNode","characterData","textContent","setImmediate","nextTick","vm","updateComponent","exprOrfn","user","lazy","dirty","deps","depsId","Set","getters","_vm","path","has","add","addSub","call","queueWatcher","oldValue","queue","flushWatcher","run","initState","ops","$options","props","initData","watch","initWatch","computed","initComputed","_data","Proxy","source","handler","createWatcher","$watch","_computedWatcher","userDef","Watcher","defineComputed","sharePropDefinition","enumable","configurable","createComputedGetter","evaluate","stateMixin","$nextTick","_objectSpread","immediate","patch","oldVnode","vnode","nodeType","createEl","parentEl","parentNode","insertBefore","nextsibling","removeChild","replaceChild","updateProps","oldChildren","newChildren","updateChild","innerHtml","appendChild","oldStartIndex","oldStartVnode","oldEndIndex","oldEndVnode","newStartIndex","newStartVnode","newEndIndex","newEndVnode","isSameVnode","oldContext","newContext","makeIndexByKey","moveIndex","undefined","moveVnode","oldProps","newProps","removeAttribute","newStyle","style","oldStyle","styleName","className","setAttribute","createElement","mountComponent","callHook","_update","_render","lifecycleMixin","prevVnode","_vnode","$el","hook","handlers","initMixin","_init","$mounted","querySelector","template","outerHTML","renderMixin","_c","arguments","_v","createText","_s"],"mappings":"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"}